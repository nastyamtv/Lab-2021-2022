Подія Event - це об'єкт, що описує зміну стану джерела, з яким вона пов'язана. Приклад події, в якій бере участь користувач, є натискання кнопки, вибір елемента зі списку, введення символу з клавіатури і т.д. Подія може відбуватися без участі користувача при використанні таймера.

Слухач Listener - це об'єкт, що повідомляється про деяку подію. Щоб слухач зміг реагувати певну подію джерела він має бути зареєстрований, тобто. підключено до джерела. Listener повинен реалізовувати певні методи для отримання та обробки повідомлень про подію.

Listener перебуває у постійному очікуванні, поки у джерелі, у якому він зареєстрований, не настане відповідне подія, у разі якого слухач отримує управління. Також слухачеві передається об'єкт події (джерело), ​​щоб він зміг правильно на нього відреагувати. Таким чином, джерело викликає метод-обробник події, визначений у класі, що є блоком прослуховування. Як блоки прослуховування іноді використовують внутрішні класи. У цьому випадку метод, що реєструє блок прослуховування як параметр, використовується об'єкт цього внутрішнього класу.

Після обробки події слухач повертає керування. Отже, для обробки події викликаються ті слухачі, які нею " підписалися " , тобто. були зареєстровані джерелом.


2) AVA AWT (Набір абстрактних вікон)
Java AWT створює компоненти, викликаючи підпрограми власних платформ. Отже, програма графічного інтерфейсу AWT матиме зовнішній вигляд ОС Windows під час роботи на Windows та Mac OS виглядатиме та виглядатиме під час роботи на Mac тощо. Це пояснює залежність платформи додатків Abstract Window Toolkit.


